/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.example;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class LibraryTest {
    public static final String PLATFORM = System.getProperty("platform"); // Set on cmd line: -Pplatform=some_value
    private Library sut;

    @BeforeEach
    void beforeEachTest() {
        sut = new Library();
    }

    @Test
    void testSomeLibraryMethod() {
        assertTrue(sut.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    @Test
    void testAddNumbers() {
        assertEquals(5, sut.addNumbers(2, 3));
    }

    @Test
    void readProperties() {
        System.out.println("PLATFORM property = |" + PLATFORM + "|");
        assertTrue("test".equals(PLATFORM) || "staging".equals(PLATFORM));
    }

    @Disabled
    @Test
    void testIgnore() { /* To show reporting of ignored tests */ }

    @Test
    void testShowStdOut() {
        sut.printToStdOut();
        System.out.println("In LibraryTest.testShowStdOut()");
        System.out.println("If 'showStandardStreams = true' is in build.gradle, should see this line");
    }
}
